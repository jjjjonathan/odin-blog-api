{"version":3,"sources":["components/Header.js","components/SingleBlog.js","components/BlogList.js","hooks/useClearMessage.js","components/Home.js","components/NewCommentForm.js","components/PostPage.js","components/SignUpPage.js","components/SignInPage.js","components/Messages.js","App.js","index.js"],"names":["Header","user","handleLogout","Navbar","bg","expand","to","Brand","className","Toggle","aria-controls","Collapse","id","Nav","Item","Text","username","Link","onClick","as","NavLink","SingleBlog","blog","_id","title","body","formatDistanceToNow","Date","timestamp","addSuffix","smooth","comments","length","BlogList","blogs","map","useClearMessage","setSuccess","setError","useEffect","Home","NewCommentForm","handleAddComment","validationSchema","yup","shape","comment","required","Card","Body","initialValues","onSubmit","isSubmitting","errors","values","handleChange","noValidate","Form","Group","Control","name","value","onChange","isInvalid","component","Feedback","type","Button","disabled","PostPage","handleDeleteComment","useParams","find","formattedTime","time","passPostIdThroughAddComment","formikBag","a","postId","Footer","variant","size","data-commentid","data-postid","SignUpPage","handleSignUp","email","password","min","max","Label","SignInPage","handleLogin","Message","message","setMessage","Alert","onClose","dismissible","Messages","successMessage","setSuccessMessage","errorMessage","setErrorMessage","baseUrl","App","history","useHistory","useState","setBlogs","token","setToken","setUser","storedToken","localStorage","getItem","storedUserId","fetch","headers","Authorization","then","response","json","fetchedUser","catch","error","console","mode","fetchedBlogs","log","method","JSON","stringify","admin","newUser","push","setTimeout","loginInfo","setItem","removeItem","Container","style","maxWidth","path","post","resetForm","event","commentId","target","dataset","commentid","postid","filter","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d1a600f0.chunk.js","sourcesContent":["import React from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { Link, NavLink } from 'react-router-dom';\n\nconst Header = ({ user, handleLogout }) => {\n  return (\n    <Navbar bg=\"light\" expand=\"sm\">\n      <Link to=\"/\">\n        <Navbar.Brand className=\"text-info\">odinblog</Navbar.Brand>\n      </Link>\n      <Navbar.Toggle aria-controls=\"navbar-nav\" />\n      <Navbar.Collapse id=\"navbar-nav\" className=\"justify-content-end\">\n        <Nav>\n          {user ? (\n            <>\n              <Nav.Item>\n                <Navbar.Text className=\"mr-2\">\n                  Logged in as{' '}\n                  <span className=\"text-dark\">{user.username}</span>\n                </Navbar.Text>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link onClick={handleLogout}>Logout</Nav.Link>\n              </Nav.Item>\n            </>\n          ) : (\n            <>\n              <Nav.Item>\n                <Nav.Link as={NavLink} to=\"/signup\">\n                  Sign Up\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link as={NavLink} to=\"/login\">\n                  Login\n                </Nav.Link>\n              </Nav.Item>\n            </>\n          )}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { HashLink } from 'react-router-hash-link';\nimport { formatDistanceToNow } from 'date-fns';\n\nconst SingleBlog = ({ blog }) => {\n  const formattedTime = () => {\n    return formatDistanceToNow(new Date(blog.timestamp), { addSuffix: true });\n  };\n\n  return (\n    <div className=\"mb-5\">\n      <Link\n        to={`/posts/${blog._id}`}\n        className=\"text-decoration-none text-dark\"\n      >\n        <h2>{blog.title}</h2>\n        <p className=\"border-bottom mb-3 pb-2 text-muted\">\n          by {blog.user.username}\n        </p>\n      </Link>\n      <p>{blog.body}</p>\n      <div className=\"d-flex justify-content-between\">\n        <p className=\"text-muted\">{formattedTime()}</p>\n        <HashLink\n          to={`/posts/${blog._id}#comments`}\n          className=\"text-muted\"\n          smooth\n        >\n          {blog.comments.length} Comments\n        </HashLink>\n      </div>\n    </div>\n  );\n};\n\nexport default SingleBlog;\n","import React from 'react';\nimport SingleBlog from './SingleBlog';\n\nconst BlogList = ({ blogs }) => {\n  return blogs.map((blog) => <SingleBlog key={blog._id} blog={blog} />);\n};\n\nexport default BlogList;\n","import { useEffect } from 'react';\n\nconst useClearMessage = (setSuccess, setError) => {\n  useEffect(() => {\n    setSuccess('');\n    setError('');\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n};\n\nexport default useClearMessage;\n","import React from 'react';\n\nimport BlogList from './BlogList';\n\nimport useClearMessage from '../hooks/useClearMessage';\n\nconst Home = ({ blogs, setSuccess, setError }) => {\n  useClearMessage(setSuccess, setError);\n\n  return <BlogList blogs={blogs} />;\n};\n\nexport default Home;\n","import React from 'react';\nimport { Formik, Form as FormikForm, ErrorMessage } from 'formik';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Card } from 'react-bootstrap';\nimport * as yup from 'yup';\n\nconst NewCommentForm = ({ user, handleAddComment }) => {\n  const validationSchema = yup.object().shape({\n    comment: yup.string().required('Comment is required'),\n  });\n\n  return (\n    <Card>\n      <Card.Header>\n        <h5 className=\"mb-0\">Add new comment</h5>\n      </Card.Header>\n      <Card.Body>\n        {user ? (\n          <Formik\n            initialValues={{ comment: '' }}\n            validationSchema={validationSchema}\n            onSubmit={handleAddComment}\n          >\n            {({ isSubmitting, errors, values, handleChange }) => (\n              <FormikForm noValidate>\n                <Form.Group>\n                  <Form.Control\n                    as=\"textarea\"\n                    name=\"comment\"\n                    value={values.comment}\n                    onChange={handleChange}\n                    isInvalid={!!errors.comment}\n                  />\n                  <ErrorMessage\n                    name=\"comment\"\n                    component={Form.Control.Feedback}\n                    type=\"invalid\"\n                  />\n                </Form.Group>\n                <Button type=\"submit\" disabled={isSubmitting}>\n                  Add comment\n                </Button>\n              </FormikForm>\n            )}\n          </Formik>\n        ) : (\n          <p className=\"mb-0\">\n            <Link to=\"/signup\">Sign up</Link> or <Link to=\"/login\">log in</Link>{' '}\n            to add a new comment!\n          </p>\n        )}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default NewCommentForm;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Card, Button } from 'react-bootstrap';\nimport { formatDistanceToNow } from 'date-fns';\nimport NewCommentForm from './NewCommentForm';\n\nimport useClearMessage from '../hooks/useClearMessage';\n\nconst PostPage = ({\n  blogs,\n  user,\n  handleAddComment,\n  handleDeleteComment,\n  setSuccess,\n  setError,\n}) => {\n  useClearMessage(setSuccess, setError);\n\n  const { id } = useParams();\n  const blog = blogs.find((blog) => id === blog._id);\n\n  const formattedTime = (time) => {\n    return formatDistanceToNow(new Date(time), { addSuffix: true });\n  };\n\n  // function is async so that formik will automatically setSubmitting to false on completion\n  const passPostIdThroughAddComment = async ({ comment }, formikBag) => {\n    handleAddComment({ comment, postId: id }, formikBag);\n  };\n\n  return blog ? (\n    <div className=\"mb-5\">\n      <h2 className=\"display-4\">{blog.title}</h2>\n      <p className=\"border-bottom mb-4 pb-3 lead\">by {blog.user.username}</p>\n      <p>{blog.body}</p>\n      <p className=\"text-muted\">Posted {formattedTime(blog.timestamp)}</p>\n      <h4 className=\"mt-5 mb-4\" id=\"comments\">\n        Comments\n      </h4>\n      {blog.comments.map((comment) => (\n        <Card key={comment._id} className=\"mb-4\">\n          <Card.Body>{comment.body}</Card.Body>\n          <Card.Footer className=\"d-flex justify-content-between align-items-center\">\n            <small className=\"text-muted\">\n              Posted by {comment.user.username}{' '}\n              {formattedTime(comment.timestamp)}\n            </small>\n            {user && comment.user._id === user._id ? (\n              <Button\n                variant=\"outline-danger\"\n                size=\"sm\"\n                onClick={handleDeleteComment}\n                data-commentid={comment._id}\n                data-postid={blog._id}\n              >\n                Delete\n              </Button>\n            ) : null}\n          </Card.Footer>\n        </Card>\n      ))}\n      <NewCommentForm\n        user={user}\n        handleAddComment={passPostIdThroughAddComment}\n      />\n    </div>\n  ) : null;\n};\n\nexport default PostPage;\n","import React from 'react';\nimport { Formik, Form as FormikForm, Field, ErrorMessage } from 'formik';\nimport { Form, Button } from 'react-bootstrap';\nimport * as yup from 'yup';\n\nimport useClearMessage from '../hooks/useClearMessage';\n\nconst SignUpPage = ({ handleSignUp, setSuccess, setError }) => {\n  useClearMessage(setSuccess, setError);\n\n  const validationSchema = yup.object().shape({\n    username: yup.string().required('Username is required'),\n    email: yup\n      .string()\n      .email('Please enter a valid email address')\n      .required('Email is required'),\n    password: yup.string().min(8).max(40).required('Password is required'),\n  });\n\n  return (\n    <>\n      <h1 className=\"mb-4\">Sign Up</h1>\n      <Formik\n        initialValues={{ username: '', email: '', password: '' }}\n        validationSchema={validationSchema}\n        onSubmit={handleSignUp}\n      >\n        {({ isSubmitting, errors }) => (\n          <FormikForm noValidate>\n            <Form.Group>\n              <Form.Label>Email address</Form.Label>\n              <Field\n                type=\"email\"\n                name=\"email\"\n                as={Form.Control}\n                isInvalid={!!errors.email}\n              />\n              <ErrorMessage\n                name=\"email\"\n                component={Form.Control.Feedback}\n                type=\"invalid\"\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>Username</Form.Label>\n              <Field\n                type=\"text\"\n                name=\"username\"\n                as={Form.Control}\n                isInvalid={!!errors.username}\n              />\n              <ErrorMessage\n                name=\"username\"\n                component={Form.Control.Feedback}\n                type=\"invalid\"\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>Password</Form.Label>\n              <Field\n                type=\"password\"\n                name=\"password\"\n                as={Form.Control}\n                isInvalid={!!errors.password}\n              />\n              <ErrorMessage\n                name=\"password\"\n                component={Form.Control.Feedback}\n                type=\"invalid\"\n              />\n            </Form.Group>\n\n            <Button type=\"submit\" disabled={isSubmitting}>\n              Submit\n            </Button>\n          </FormikForm>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default SignUpPage;\n","import React from 'react';\nimport { Formik, Form as FormikForm, Field, ErrorMessage } from 'formik';\nimport { Form, Button } from 'react-bootstrap';\nimport * as yup from 'yup';\n\nimport useClearMessage from '../hooks/useClearMessage';\n\nconst SignInPage = ({ handleLogin, setSuccess, setError }) => {\n  useClearMessage(setSuccess, setError);\n\n  const validationSchema = yup.object().shape({\n    email: yup\n      .string()\n      .email('Please enter a valid email address')\n      .required('Email is required'),\n    password: yup.string().min(8).max(40).required('Password is required'),\n  });\n\n  return (\n    <>\n      <h1 className=\"mb-4\">Log in</h1>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        validationSchema={validationSchema}\n        onSubmit={handleLogin}\n      >\n        {({ isSubmitting, errors }) => (\n          <FormikForm noValidate>\n            <Form.Group>\n              <Form.Label>Email address</Form.Label>\n              <Field\n                type=\"email\"\n                name=\"email\"\n                as={Form.Control}\n                isInvalid={!!errors.email}\n              />\n              <ErrorMessage\n                name=\"email\"\n                component={Form.Control.Feedback}\n                type=\"invalid\"\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>Password</Form.Label>\n              <Field\n                type=\"password\"\n                name=\"password\"\n                as={Form.Control}\n                isInvalid={!!errors.password}\n              />\n              <ErrorMessage\n                name=\"password\"\n                component={Form.Control.Feedback}\n                type=\"invalid\"\n              />\n            </Form.Group>\n            <Button type=\"submit\" disabled={isSubmitting}>\n              Log In\n            </Button>\n          </FormikForm>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default SignInPage;\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nconst Message = ({ variant, message, setMessage }) => {\n  if (message) {\n    return (\n      <Alert variant={variant} onClose={() => setMessage('')} dismissible>\n        <p className=\"mb-0\">{message}</p>\n      </Alert>\n    );\n  }\n  return null;\n};\n\nconst Messages = ({\n  successMessage,\n  setSuccessMessage,\n  errorMessage,\n  setErrorMessage,\n}) => {\n  return (\n    <>\n      <Message\n        variant=\"danger\"\n        message={errorMessage}\n        setMessage={setErrorMessage}\n      />\n      <Message\n        variant=\"success\"\n        message={successMessage}\n        setMessage={setSuccessMessage}\n      />\n    </>\n  );\n};\nexport default Messages;\n","import React, { useState, useEffect } from 'react';\nimport { Switch, Route, useHistory } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\n\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport PostPage from './components/PostPage';\nimport SignUpPage from './components/SignUpPage';\nimport SignInPage from './components/SignInPage';\nimport Messages from './components/Messages';\n\n// const baseUrl = 'http://localhost:5000';\nconst baseUrl = 'https://immense-shelf-57554.herokuapp.com/';\n\nconst App = () => {\n  const history = useHistory();\n\n  const [blogs, setBlogs] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [token, setToken] = useState('');\n  const [user, setUser] = useState();\n\n  // Effect hook for fetching current user object from stored token\n  useEffect(() => {\n    const storedToken = localStorage.getItem('odinBlogPublicToken');\n    const storedUserId = localStorage.getItem('odinBlogPublicUserId');\n\n    if (storedToken && storedUserId && !token && !user) {\n      fetch(`${baseUrl}/api/users/${storedUserId}`, {\n        headers: {\n          Authorization: `Bearer ${storedToken}`,\n        },\n      })\n        .then((response) => response.json())\n        .then((fetchedUser) => {\n          setToken(storedToken);\n          setUser(fetchedUser);\n        })\n        .catch((error) => {\n          console.error(error);\n          if (error.message === 'Failed to fetch') {\n            setErrorMessage('Failed to load data from server');\n          } else {\n            setErrorMessage(error.message);\n          }\n        });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Effect hook for fetching blog posts\n  useEffect(() => {\n    fetch(`${baseUrl}/api/posts`, { mode: 'cors' })\n      .then((response) => response.json())\n      .then((fetchedBlogs) => setBlogs(fetchedBlogs))\n      .catch((error) => {\n        console.log({ error });\n        if (error.message === 'Failed to fetch') {\n          setErrorMessage('Failed to load data from server');\n        } else {\n          setErrorMessage(error.message);\n        }\n      });\n  }, []);\n\n  const handleSignUp = async (values) => {\n    fetch(`${baseUrl}/api/users/signup`, {\n      mode: 'cors',\n      method: 'POST',\n      body: JSON.stringify({ ...values, admin: false }),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then((response) => response.json())\n      .then((newUser) => {\n        history.push('/login');\n        setTimeout(() => {\n          setSuccessMessage(\n            `Successfully created user ${newUser.username}! Please login`,\n          );\n        }, 100);\n      })\n      .catch((error) => {\n        console.error(error);\n        if (error.message === 'Failed to fetch') {\n          setErrorMessage('Failed to create user');\n        } else {\n          setErrorMessage(error.message);\n        }\n      });\n  };\n\n  // function is async so that formik will automatically setSubmitting to false on completion\n  const handleLogin = async (values) => {\n    fetch(`${baseUrl}/api/users/login`, {\n      method: 'POST',\n      body: JSON.stringify(values),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then((response) => response.json())\n      .then((loginInfo) => {\n        if (loginInfo.token) {\n          const { _id, username, email, admin } = loginInfo;\n\n          setToken(loginInfo.token);\n\n          localStorage.setItem('odinBlogPublicToken', loginInfo.token);\n          localStorage.setItem('odinBlogPublicUserId', _id);\n\n          setUser({ _id, username, email, admin });\n\n          history.push('/');\n          setTimeout(() => {\n            setSuccessMessage(`Successfully logged in as ${username}!`);\n          }, 100);\n        } else {\n          setErrorMessage('Invalid username or password');\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n        if (error.message === 'Failed to fetch') {\n          setErrorMessage('Failed to load data from server');\n        } else {\n          setErrorMessage(error.message);\n        }\n      });\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('odinBlogPublicToken');\n    localStorage.removeItem('odinBlogPublicUserId');\n    setToken('');\n    setUser();\n  };\n\n  const handleAddComment = ({ comment, postId }, formikBag) => {\n    fetch(`${baseUrl}/api/posts/${postId}/comments`, {\n      method: 'POST',\n      body: JSON.stringify({ body: comment }),\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-type': 'application/json',\n      },\n    })\n      .then((response) => response.json())\n      .then(({ body, timestamp, user, _id, post }) => {\n        setBlogs(\n          blogs.map((blog) => {\n            if (blog._id === post) {\n              return {\n                ...blog,\n                comments: [\n                  ...blog.comments,\n                  {\n                    body,\n                    timestamp,\n                    user,\n                    _id,\n                  },\n                ],\n              };\n            } else {\n              return blog;\n            }\n          }),\n        );\n\n        formikBag.resetForm();\n      })\n      .catch((error) => {\n        console.error(error);\n        if (error.message === 'Failed to fetch') {\n          setErrorMessage('Failed to add comment; error connecting to server');\n        } else {\n          setErrorMessage(error.message);\n        }\n      });\n  };\n\n  const handleDeleteComment = (event) => {\n    const commentId = event.target.dataset.commentid;\n    const postId = event.target.dataset.postid;\n\n    fetch(`${baseUrl}/api/comments/${commentId}`, {\n      method: 'DELETE',\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then(() => {\n        setBlogs(\n          blogs.map((blog) => {\n            if (blog._id === postId) {\n              return {\n                ...blog,\n                comments: blog.comments.filter((comment) => {\n                  if (comment._id === commentId) {\n                    return false;\n                  } else {\n                    return true;\n                  }\n                }),\n              };\n            } else {\n              return blog;\n            }\n          }),\n        );\n      })\n      .catch((error) => {\n        console.error(error);\n        setErrorMessage(error);\n      });\n  };\n\n  return (\n    <>\n      <Header user={user} handleLogout={handleLogout} />\n      <Container className=\"mt-4\" style={{ maxWidth: 600 }}>\n        <Messages\n          errorMessage={errorMessage}\n          setErrorMessage={setErrorMessage}\n          successMessage={successMessage}\n          setSuccessMessage={setSuccessMessage}\n        />\n        <Switch>\n          <Route path=\"/signup\">\n            <SignUpPage\n              handleSignUp={handleSignUp}\n              setSuccess={setSuccessMessage}\n              setError={setErrorMessage}\n            />\n          </Route>\n          <Route path=\"/login\">\n            <SignInPage\n              handleLogin={handleLogin}\n              setSuccess={setSuccessMessage}\n              setError={setErrorMessage}\n            />\n          </Route>\n          <Route path=\"/posts/:id\">\n            <PostPage\n              blogs={blogs}\n              user={user}\n              handleAddComment={handleAddComment}\n              handleDeleteComment={handleDeleteComment}\n              setSuccess={setSuccessMessage}\n              setError={setErrorMessage}\n            />\n          </Route>\n          <Route exact path=\"/\">\n            <Home\n              blogs={blogs}\n              setSuccess={setSuccessMessage}\n              setError={setErrorMessage}\n            />\n          </Route>\n        </Switch>\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}