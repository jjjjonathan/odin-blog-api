{"version":3,"sources":["components/LoginPage.js","variables.js","components/NavDrawer.js","components/Toast.js","components/PostPage.js","components/PostList.js","components/Home.js","components/CommentsPage.js","components/MainSwitch.js","components/LoadingPage.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","header","marginBottom","input","LoginPage","handleLogin","classes","validationSchema","yup","shape","email","required","password","min","max","formik","useFormik","initialValues","onSubmit","Container","maxWidth","className","Typography","component","variant","align","noValidate","handleSubmit","TextField","fullWidth","id","name","label","value","values","onChange","handleChange","error","touched","errors","helperText","type","Boolean","Button","color","baseUrl","title","padding","drawer","width","drawerPaper","NavDrawer","handleLogout","Drawer","anchor","Link","RouterLink","to","Divider","List","ListItem","button","ListItemText","onClick","Toast","message","useState","open","setOpen","useEffect","handleClose","event","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","action","IconButton","size","aria-label","fontSize","PostPage","newPost","posts","handleSubmitPost","handleDeletePost","useParams","post","find","_id","body","published","setFieldValue","pageTitle","style","multiline","rows","placeholder","FormControlLabel","control","Checkbox","checked","display","columns","field","headerName","PostList","history","useHistory","map","date","timestamp","format","Date","height","pageSize","disableSelectionOnClick","onCellClick","params","push","Home","CommentsPage","comments","handleDeleteComment","disableClickEventBubbling","renderCell","comment","user","username","container","marginLeft","MainSwitch","blogs","handleEditPost","handleNewPost","path","exact","LoadingPage","justifyContent","App","setBlogs","setComments","token","setToken","setUser","setMessage","loadingUser","setLoadingUser","storedToken","localStorage","getItem","storedUserId","fetch","headers","Authorization","then","response","json","fetchedUser","catch","console","mode","fetchedBlogs","log","fetchedComments","a","method","JSON","stringify","loginInfo","admin","setItem","removeItem","editedPost","blog","status","filter","ReactDOM","render","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.d9906dc9.chunk.js","sourcesContent":["import React from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { Container, Button, Typography, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n  },\n  header: {\n    marginBottom: theme.spacing(3),\n  },\n  input: {\n    marginBottom: theme.spacing(3),\n  },\n}));\n\nconst LoginPage = ({ handleLogin }) => {\n  const classes = useStyles();\n\n  const validationSchema = yup.object().shape({\n    email: yup\n      .string('Please enter your email')\n      .email('Please enter a valid email address')\n      .required('Email is required'),\n    password: yup\n      .string('Please enter your password')\n      .min(8, 'Password must be at least 8 characters')\n      .max(40, 'Password must be less than 40 characters')\n      .required('Password is required'),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: handleLogin,\n  });\n\n  return (\n    <Container maxWidth=\"xs\" className={classes.paper}>\n      <Typography\n        component=\"h1\"\n        variant=\"h4\"\n        align=\"center\"\n        className={classes.header}\n      >\n        Log In\n      </Typography>\n      <form noValidate onSubmit={formik.handleSubmit}>\n        <TextField\n          className={classes.input}\n          variant=\"outlined\"\n          fullWidth\n          id=\"email\"\n          name=\"email\"\n          label=\"Email Address\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && !!formik.errors.email}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          className={classes.input}\n          variant=\"outlined\"\n          fullWidth\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <Button color=\"primary\" type=\"submit\" fullWidth>\n          Log In\n        </Button>\n      </form>\n    </Container>\n  );\n};\n\nexport default LoginPage;\n","// export const baseUrl = 'http://localhost:5000';\nexport const baseUrl = 'https://immense-shelf-57554.herokuapp.com';\n\nexport const drawerWidth = 240;\n","import React from 'react';\nimport {\n  Drawer,\n  Typography,\n  Divider,\n  List,\n  ListItem,\n  ListItemText,\n  Link,\n  makeStyles,\n} from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { drawerWidth } from '../variables';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    padding: theme.spacing(3),\n  },\n  drawer: {\n    width: drawerWidth,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n}));\n\nconst NavDrawer = ({ handleLogout }) => {\n  const classes = useStyles();\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      anchor=\"left\"\n      className={classes.drawer}\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n    >\n      <Typography align=\"center\" variant=\"h6\" className={classes.title}>\n        <Link component={RouterLink} to=\"/\">\n          odinblog admin\n        </Link>\n      </Typography>\n      <Divider />\n      <List>\n        <ListItem button component={RouterLink} to=\"/posts/new\">\n          <ListItemText>Add New Post</ListItemText>\n        </ListItem>\n        <ListItem button component={RouterLink} to=\"/posts\">\n          <ListItemText>Posts</ListItemText>\n        </ListItem>\n        <ListItem button component={RouterLink} to=\"/comments\">\n          <ListItemText>Manage Comments</ListItemText>\n        </ListItem>\n      </List>\n      <Divider />\n      <List>\n        <ListItem button onClick={handleLogout}>\n          <ListItemText>Log Out</ListItemText>\n        </ListItem>\n      </List>\n    </Drawer>\n  );\n};\n\nexport default NavDrawer;\n","import React, { useState, useEffect } from 'react';\nimport { Snackbar, IconButton } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst Toast = ({ message }) => {\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    if (message !== '') {\n      setOpen(true);\n    }\n  }, [message]);\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        message={message}\n        action={\n          <IconButton\n            size=\"small\"\n            aria-label=\"close\"\n            color=\"inherit\"\n            onClick={handleClose}\n          >\n            <CloseIcon fontSize=\"small\" />\n          </IconButton>\n        }\n      />\n    </div>\n  );\n};\n\nexport default Toast;\n","import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport {\n  FormControlLabel,\n  Checkbox,\n  Button,\n  Typography,\n  TextField,\n} from '@material-ui/core';\n\nconst PostPage = ({ newPost, posts, handleSubmitPost, handleDeletePost }) => {\n  const { id } = useParams();\n  const post = posts?.find((post) => post._id === id);\n\n  const passIdThruSubmitPost = (values) => {\n    return handleSubmitPost(values, id);\n  };\n\n  const validationSchema = yup.object().shape({\n    title: yup.string().required('Title is required'),\n    body: yup.string().required('Post cannot be empty!'),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      title: '',\n      body: '',\n      published: false,\n    },\n    validationSchema: validationSchema,\n    onSubmit: passIdThruSubmitPost,\n  });\n\n  useEffect(() => {\n    if (post && !newPost) {\n      formik.setFieldValue('title', post.title);\n      formik.setFieldValue('body', post.body);\n      formik.setFieldValue('published', post.published);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [post]);\n\n  useEffect(() => {\n    if (newPost) {\n      formik.setFieldValue('title', '');\n      formik.setFieldValue('body', '');\n      formik.setFieldValue('published', false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [newPost]);\n\n  const pageTitle = newPost ? 'New Post' : 'Edit Post';\n\n  const deleteButton = () => {\n    if (newPost) return null;\n    return (\n      <Button\n        style={{ marginTop: 50 }}\n        variant=\"contained\"\n        color=\"secondary\"\n        size=\"small\"\n        onClick={() => handleDeletePost(id)}\n      >\n        Delete this post\n      </Button>\n    );\n  };\n\n  return (\n    <div style={{ maxWidth: 600 }}>\n      <Typography variant=\"h5\" style={{ marginBottom: 30 }}>\n        {pageTitle}\n      </Typography>\n      <form noValidate onSubmit={formik.handleSubmit}>\n        <TextField\n          style={{ marginBottom: 20 }}\n          variant=\"outlined\"\n          fullWidth\n          id=\"title\"\n          name=\"title\"\n          label=\"Post Title\"\n          value={formik.values.title}\n          onChange={formik.handleChange}\n          error={formik.touched.title && !!formik.errors.title}\n          helperText={formik.touched.title && formik.errors.title}\n        />\n        <TextField\n          variant=\"outlined\"\n          multiline\n          rows=\"10\"\n          fullWidth\n          id=\"body\"\n          name=\"body\"\n          placeholder=\"Write your post here!\"\n          value={formik.values.body}\n          onChange={formik.handleChange}\n          error={formik.touched.body && !!formik.errors.body}\n          helperText={formik.touched.body && formik.errors.body}\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              name=\"published\"\n              color=\"primary\"\n              onChange={formik.handleChange}\n              checked={formik.values.published}\n            />\n          }\n          label=\"Publish this post\"\n          style={{ display: 'block', marginTop: 15 }}\n        />\n        <Button type=\"submit\" variant=\"contained\" style={{ marginTop: 12 }}>\n          Submit\n        </Button>\n      </form>\n      {deleteButton()}\n    </div>\n  );\n};\n\nexport default PostPage;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { useHistory } from 'react-router-dom';\nimport { format } from 'date-fns';\n\nconst formatDate = (date) => {\n  return format(new Date(date), 'PPp');\n};\n\nconst columns = [\n  { field: 'post', headerName: 'Post', width: 300 },\n  { field: 'date', type: 'date', headerName: 'Last Updated', width: 200 },\n  {\n    field: 'published',\n    headerName: 'Published?',\n    type: 'boolean',\n    width: 150,\n  },\n];\n\nconst PostList = ({ posts }) => {\n  const history = useHistory();\n\n  const rows = posts.map((post) => ({\n    id: post._id,\n    post: post.title,\n    date: formatDate(post.timestamp),\n    published: post.published,\n  }));\n\n  const onCellClick = (params, event) => {\n    history.push(`/posts/${params.id}`);\n  };\n\n  return (\n    <>\n      <Typography variant=\"h5\" style={{ marginBottom: 25 }}>\n        Posts\n      </Typography>\n      <div style={{ width: 650, height: 500 }}>\n        <DataGrid\n          rows={rows}\n          columns={columns}\n          pageSize={6}\n          disableSelectionOnClick\n          onCellClick={onCellClick}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default PostList;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\nconst Home = () => {\n  return (\n    <>\n      <Typography variant=\"h4\">\n        Welcome to the odinblog admin dashboard\n      </Typography>\n      <Typography style={{ marginTop: 20 }}>\n        Get started to your left\n      </Typography>\n    </>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { Typography, Button } from '@material-ui/core';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { format } from 'date-fns';\n\nconst CommentsPage = ({ comments, handleDeleteComment }) => {\n  const formatDate = (date) => {\n    return format(new Date(date), 'PPp');\n  };\n\n  const deleteButton = (params) => {\n    return (\n      <Button\n        color=\"secondary\"\n        variant=\"outlined\"\n        onClick={() => handleDeleteComment(params.id)}\n      >\n        Delete\n      </Button>\n    );\n  };\n\n  const columns = [\n    { field: 'comment', headerName: 'Comment', width: 280 },\n    { field: 'user', headerName: 'Username', width: 120 },\n    { field: 'post', headerName: 'Post', width: 200 },\n    { field: 'date', type: 'date', headerName: 'Posted', width: 180 },\n    {\n      field: 'delete',\n      headerName: 'Delete',\n      disableClickEventBubbling: true,\n      renderCell: deleteButton,\n      width: 120,\n    },\n  ];\n\n  const rows = comments.map((comment) => ({\n    id: comment._id,\n    comment: comment.body,\n    user: comment.user.username,\n    post: comment.post.title,\n    date: formatDate(comment.timestamp),\n  }));\n\n  return (\n    <>\n      <Typography variant=\"h5\" style={{ marginBottom: 30 }}>\n        Manage Comments\n      </Typography>\n      <div style={{ width: 910, height: 550 }}>\n        <DataGrid\n          rows={rows}\n          columns={columns}\n          pageSize={8}\n          disableSelectionOnClick\n        />\n      </div>\n    </>\n  );\n};\n\nexport default CommentsPage;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { Container, makeStyles } from '@material-ui/core';\nimport { drawerWidth } from '../variables';\n\nimport PostPage from './PostPage';\nimport PostList from './PostList';\nimport Home from './Home';\nimport CommentsPage from './CommentsPage';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    marginTop: theme.spacing(3),\n    marginLeft: drawerWidth,\n  },\n}));\n\nconst MainSwitch = ({\n  blogs,\n  handleEditPost,\n  handleNewPost,\n  handleDeletePost,\n  comments,\n  handleDeleteComment,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Container className={classes.container}>\n      <Switch>\n        <Route path=\"/comments\">\n          <CommentsPage\n            comments={comments}\n            handleDeleteComment={handleDeleteComment}\n          />\n        </Route>\n        <Route path=\"/posts/new\">\n          <PostPage newPost={true} handleSubmitPost={handleNewPost} />\n        </Route>\n        <Route path=\"/posts/:id\">\n          <PostPage\n            posts={blogs}\n            handleSubmitPost={handleEditPost}\n            handleDeletePost={handleDeletePost}\n          />\n        </Route>\n        <Route path=\"/posts\">\n          <PostList posts={blogs} />\n        </Route>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Container>\n  );\n};\n\nexport default MainSwitch;\n","import React from 'react';\nimport CircularProgess from '@material-ui/core/CircularProgress';\n\nconst LoadingPage = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: 100,\n      }}\n    >\n      <CircularProgess />\n    </div>\n  );\n};\n\nexport default LoadingPage;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport LoginPage from './components/LoginPage';\nimport NavDrawer from './components/NavDrawer';\nimport Toast from './components/Toast';\nimport MainSwitch from './components/MainSwitch';\nimport LoadingPage from './components/LoadingPage';\n\nimport { baseUrl } from './variables';\n\nconst App = () => {\n  const history = useHistory();\n\n  const [blogs, setBlogs] = useState([]);\n  const [comments, setComments] = useState([]);\n\n  const [token, setToken] = useState('');\n  const [user, setUser] = useState();\n\n  const [message, setMessage] = useState('');\n  const [loadingUser, setLoadingUser] = useState(false);\n\n  // Effect hook for fetching current user object from stored token\n  useEffect(() => {\n    const storedToken = localStorage.getItem('odinBlogAdminToken');\n    const storedUserId = localStorage.getItem('odinBlogAdminUserId');\n\n    if (storedToken && storedUserId && !token && !user) {\n      setLoadingUser(true);\n\n      fetch(`${baseUrl}/api/users/${storedUserId}`, {\n        headers: {\n          Authorization: `Bearer ${storedToken}`,\n        },\n      })\n        .then((response) => response.json())\n        .then((fetchedUser) => {\n          setToken(storedToken);\n          setUser(fetchedUser);\n          setLoadingUser(false);\n        })\n        .catch((error) => {\n          setLoadingUser(false);\n          console.error(error);\n          if (error.message === 'Failed to fetch') {\n            setMessage('Failed to load data from server');\n          } else {\n            setMessage(error.message);\n          }\n        });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Effect hook for fetching blog posts\n  useEffect(() => {\n    if (user) {\n      fetch(`${baseUrl}/api/users/${user._id}/posts`, {\n        mode: 'cors',\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n        .then((response) => response.json())\n        .then((fetchedBlogs) => setBlogs(fetchedBlogs))\n        .catch((error) => {\n          console.log({ error });\n          if (error.message === 'Failed to fetch') {\n            setMessage('Failed to load data from server');\n          } else {\n            setMessage(error.message);\n          }\n        });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [user]);\n\n  // Effect hook for fetching comments\n  useEffect(() => {\n    if (user) {\n      fetch(`${baseUrl}/api/comments`, {\n        mode: 'cors',\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n        .then((response) => response.json())\n        .then((fetchedComments) => setComments(fetchedComments))\n        .catch((error) => {\n          console.log({ error });\n          if (error.message === 'Failed to fetch') {\n            setMessage('Failed to load data from server');\n          } else {\n            setMessage(error.message);\n          }\n        });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [user]);\n\n  // function is async so that formik will automatically setSubmitting to false on completion\n  const handleLogin = async (values) => {\n    setLoadingUser(true);\n    fetch(`${baseUrl}/api/users/login`, {\n      method: 'POST',\n      body: JSON.stringify(values),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then((response) => response.json())\n      .then((loginInfo) => {\n        if (loginInfo.token) {\n          const { _id, username, email, admin } = loginInfo;\n\n          setToken(loginInfo.token);\n\n          localStorage.setItem('odinBlogAdminToken', loginInfo.token);\n          localStorage.setItem('odinBlogAdminUserId', _id);\n\n          setUser({ _id, username, email, admin });\n\n          setMessage(`Successfully logged in as ${username}!`);\n          setLoadingUser(false);\n        } else {\n          setMessage('Invalid username or password');\n          setLoadingUser(false);\n        }\n      })\n      .catch((error) => {\n        setLoadingUser(false);\n        console.error(error);\n        if (error.message === 'Failed to fetch') {\n          setMessage('Failed to load data from server');\n        } else {\n          setMessage(error.message);\n        }\n      });\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('odinBlogAdminToken');\n    localStorage.removeItem('odinBlogAdminUserId');\n    setToken('');\n    setMessage(`Logged out ${user.username}!`);\n    setUser();\n  };\n\n  const handleNewPost = (values) => {\n    fetch(`${baseUrl}/api/posts`, {\n      method: 'POST',\n      body: JSON.stringify(values),\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-type': 'application/json',\n      },\n    })\n      .then((response) => response.json())\n      .then((newPost) => {\n        setBlogs([...blogs, newPost]);\n\n        history.push('/posts');\n        setMessage(`Successfully created post ${newPost.title}`);\n      })\n      .catch((error) => {\n        console.error(error);\n        if (error.message === 'Failed to fetch') {\n          setMessage('Failed to save new post');\n        } else {\n          setMessage(error.message);\n        }\n      });\n  };\n\n  const handleEditPost = (values, id) => {\n    fetch(`${baseUrl}/api/posts/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(values),\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-type': 'application/json',\n      },\n    })\n      .then((response) => response.json())\n      .then((editedPost) => {\n        setBlogs(\n          blogs.map((blog) => {\n            if (blog._id === id) {\n              return editedPost;\n            } else {\n              return blog;\n            }\n          }),\n        );\n\n        history.push('/posts');\n        setMessage(`Successfully updated post ${editedPost.title}`);\n      })\n      .catch((error) => {\n        console.error(error);\n        if (error.message === 'Failed to fetch') {\n          setMessage('Failed to edit post');\n        } else {\n          setMessage(error.message);\n        }\n      });\n  };\n\n  const handleDeletePost = (id) => {\n    fetch(`${baseUrl}/api/posts/${id}`, {\n      method: 'DELETE',\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => {\n        if (response.status === 204) {\n          setBlogs(\n            blogs.filter((blog) => {\n              if (blog._id === id) {\n                return false;\n              } else {\n                return true;\n              }\n            }),\n          );\n\n          setMessage(`Successfully deleted post!`);\n          history.push('/posts');\n        } else {\n          setMessage('Failed to delete post');\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n        if (error.message === 'Failed to fetch') {\n          setMessage('Failed to delete post');\n        } else {\n          setMessage(error.message);\n        }\n      });\n  };\n\n  const handleDeleteComment = (id) => {\n    fetch(`${baseUrl}/api/comments/${id}`, {\n      method: 'DELETE',\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => {\n        if (response.status === 204) {\n          setComments(\n            comments.filter((comment) => {\n              if (comment._id === id) {\n                return false;\n              } else {\n                return true;\n              }\n            }),\n          );\n\n          setMessage(`Successfully deleted comment!`);\n        } else {\n          setMessage('Failed to delete comment');\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n        if (error.message === 'Failed to fetch') {\n          setMessage('Failed to delete post');\n        } else {\n          setMessage(error.message);\n        }\n      });\n  };\n\n  if (user) {\n    // Logged in\n    return (\n      <>\n        <NavDrawer handleLogout={handleLogout} />\n        <Toast message={message} />\n        <MainSwitch\n          blogs={blogs}\n          handleEditPost={handleEditPost}\n          handleNewPost={handleNewPost}\n          handleDeletePost={handleDeletePost}\n          comments={comments}\n          handleDeleteComment={handleDeleteComment}\n        />\n      </>\n    );\n  } else if (loadingUser) {\n    // Loading user from saved token\n    return (\n      <>\n        <LoadingPage />\n        <Toast message={message} />\n      </>\n    );\n  } else {\n    // Not logged in\n    return (\n      <>\n        <LoginPage handleLogin={handleLogin} />\n        <Toast message={message} />\n      </>\n    );\n  }\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { CssBaseline } from '@material-ui/core';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <CssBaseline />\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}